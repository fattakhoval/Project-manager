{"ast":null,"code":"import ModalComponent from './ModalComponent.vue';\nexport default {\n  components: {\n    ModalComponent\n  },\n  props: {\n    data: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      isModalOpen: false,\n      isEditMode: false,\n      editedUser: {},\n      serverResponse: null\n    };\n  },\n  methods: {\n    openCreateModal() {\n      this.isEditMode = false;\n      this.editedUser = {\n        name: '',\n        email: '',\n        password: '',\n        role: 'Исполнитель'\n      };\n      this.isModalOpen = true;\n      this.serverResponse = null;\n    },\n    createUser() {\n      fetch('http://127.0.0.1:8000/api/admin/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.editedUser)\n      }).then(response => response.json()).then(data => {\n        this.serverResponse = data;\n        this.$emit('userCreated', data.user);\n        // this.isModalOpen = false;\n      }).catch(error => console.error('Error creating user:', error));\n    },\n    formatDate(date) {\n      const options = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      };\n      return new Date(date).toLocaleDateString(undefined, options);\n    },\n    openEditModal(user) {\n      this.isEditMode = true;\n      this.editedUser = {\n        ...user\n      };\n      this.isModalOpen = true;\n    },\n    saveUser() {\n      console.log('Saving user:', this.editedUser);\n      fetch(`http://0.0.0.0:8000/api/admin/users/${this.editedUser.id}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.editedUser)\n      }).then(response => {\n        if (response.ok) {\n          console.log('User updated successfully');\n          this.isModalOpen = false; // Закрываем модальное окно\n          this.$emit('userUpdated', this.editedUser); // Эмитируем событие для обновления списка\n        } else {\n          console.error('Failed to update user');\n        }\n      }).catch(error => {\n        console.error('Error updating user:', error);\n      });\n    },\n    confirmDeleteUser(userId) {\n      if (confirm('Мис клик или действительно удаляем его? Может простим, пусть живет себе.')) {\n        this.deleteUser(userId);\n      }\n    },\n    deleteUser(userId) {\n      fetch(`http://0.0.0.0:8000/api/admin/users/${userId}`, {\n        method: 'DELETE'\n      }).then(response => {\n        if (response.ok) {\n          console.log('User deleted successfully');\n          this.$emit('userDeleted', userId); // Эмитируем событие для обновления списка\n        } else {\n          console.error('Failed to delete user');\n        }\n      }).catch(error => {\n        console.error('Error deleting user:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["ModalComponent","components","props","data","type","Array","required","isModalOpen","isEditMode","editedUser","serverResponse","methods","openCreateModal","name","email","password","role","createUser","fetch","method","headers","body","JSON","stringify","then","response","json","$emit","user","catch","error","console","formatDate","date","options","year","month","day","Date","toLocaleDateString","undefined","openEditModal","saveUser","log","id","ok","confirmDeleteUser","userId","confirm","deleteUser"],"sources":["D:\\programs\\osp\\domains\\Project-manager\\project-manager-front\\my-project\\src\\components\\UsersComponent.vue"],"sourcesContent":["<template>\n    <div class=\"users\">\n      <button @click=\"openCreateModal\">Добавить пользователя</button>\n      <ul>\n        <li v-for=\"user in data\" :key=\"user.id\" class=\"user-item\">\n          <h3>{{ user.name }}</h3>\n          <p><strong>Email:</strong> {{ user.email }}</p>\n          <p><strong>Role:</strong> {{ user.role }}</p>\n          <button @click=\"openEditModal(user)\">Edit</button>\n          <button @click=\"confirmDeleteUser(user.id)\">Delete</button>\n        </li>\n      </ul>\n  \n      <ModalComponent :isOpen=\"isModalOpen\" @close=\"isModalOpen = false\">\n        <template #header>\n          <h2>{{ isEditMode ? 'Edit User' : 'Create User' }}</h2>\n        </template>\n        <template #body>\n          <input v-model=\"editedUser.name\" placeholder=\"User Name\" />\n          <input v-model=\"editedUser.email\" placeholder=\"User Email\" />\n          <input v-if=\"!isEditMode\" v-model=\"editedUser.password\" placeholder=\"User Password\" type=\"password\" />\n          <select v-model=\"editedUser.role\">\n            <option>Админ</option>\n            <option>Руководитель проекта</option>\n            <option>Исполнитель</option>\n          </select>\n          <div v-if=\"serverResponse\">\n            <p><strong>Пароль пользователя:</strong> {{ serverResponse.notHisPassword }}</p>\n          </div>\n        </template>\n        <template #footer>\n          <button @click=\"isEditMode ? saveUser() : createUser()\">Save</button>\n          <button @click=\"isModalOpen = false\">Cancel</button>\n        </template>\n      </ModalComponent>\n    </div>\n  </template>\n  \n  <script>\n    import ModalComponent from './ModalComponent.vue';\n  export default {\n    components: {\n      ModalComponent,\n    },\n    props: {\n        data: {\n        type: Array,\n        required: true,\n      },\n    },\n    data() {\n      return {\n        isModalOpen: false,\n        isEditMode: false,\n        editedUser: {},\n        serverResponse: null,\n      };\n    },\n    methods: {\n      openCreateModal() {\n        this.isEditMode = false;\n        this.editedUser = { name: '', email: '', password: '', role: 'Исполнитель' };\n        this.isModalOpen = true;\n        this.serverResponse = null;\n      },\n      createUser() {\n        fetch('http://127.0.0.1:8000/api/admin/users', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(this.editedUser),\n        })\n        .then(response => response.json())\n        .then(data => {\n            this.serverResponse = data;\n            this.$emit('userCreated', data.user);\n            // this.isModalOpen = false;\n        })\n        .catch(error => console.error('Error creating user:', error));\n      },\n      formatDate(date) {\n        const options = { year: 'numeric', month: 'long', day: 'numeric' };\n        return new Date(date).toLocaleDateString(undefined, options);\n      },\n      openEditModal(user) {\n      this.isEditMode = true;\n      this.editedUser = { ...user };\n      this.isModalOpen = true;\n    },\n      saveUser() {\n  console.log('Saving user:', this.editedUser);\n\n  fetch(`http://0.0.0.0:8000/api/admin/users/${this.editedUser.id}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(this.editedUser),\n  })\n  .then(response => {\n    if (response.ok) {\n      console.log('User updated successfully');\n      this.isModalOpen = false; // Закрываем модальное окно\n      this.$emit('userUpdated', this.editedUser); // Эмитируем событие для обновления списка\n    } else {\n      console.error('Failed to update user');\n    }\n  })\n  .catch(error => {\n    console.error('Error updating user:', error);\n  });\n},\n      confirmDeleteUser(userId) {\n        if (confirm('Мис клик или действительно удаляем его? Может простим, пусть живет себе.')) {\n            this.deleteUser(userId);\n        }\n      },\n      deleteUser(userId) {\n        fetch(`http://0.0.0.0:8000/api/admin/users/${userId}`, {\n        method: 'DELETE',\n      })\n      .then(response => {\n        if (response.ok) {\n          console.log('User deleted successfully');\n          this.$emit('userDeleted', userId); // Эмитируем событие для обновления списка\n        } else {\n          console.error('Failed to delete user');\n        }\n      })\n      .catch(error => {\n        console.error('Error deleting user:', error);\n      });\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .users {\n    padding: 20px;\n    background-color: #f9f9f9;\n    border-radius: 8px;\n  }\n  \n  .user-item {\n    margin-bottom: 20px;\n    padding: 15px;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n    background-color: #fff;\n  }\n  </style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}