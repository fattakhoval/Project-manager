{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  props: {\n    data: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      user: null\n    };\n  },\n  created() {\n    const userData = localStorage.getItem('user');\n    if (userData) {\n      this.user = JSON.parse(userData);\n    } else {\n      this.$router.push('/login');\n    }\n  },\n  methods: {\n    formatDate(date) {\n      const options = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      };\n      return new Date(date).toLocaleDateString(undefined, options);\n    },\n    async assignManager(projectId) {\n      const userId = prompt(\"Введите ID пользователя для назначения руководителем проекта:\");\n      if (userId) {\n        try {\n          const response = await fetch(`http://127.0.0.1:8000/api/admin/projects/${projectId}/assign-manager`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              user_id: userId\n            })\n          });\n          const data = await response.json();\n          console.log(\"Менеджер назначен:\", data);\n        } catch (error) {\n          console.error(\"Ошибка при назначении менеджера:\", error);\n        }\n      }\n    },\n    async assignExecutor(projectId) {\n      const userId = prompt(\"Введите ID пользователя для назначения исполнителем:\");\n      if (userId) {\n        try {\n          const response = await fetch(`http://127.0.0.1:8000/api/admin/projects/${projectId}/assign-executor`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              user_id: userId\n            })\n          });\n          const data = await response.json();\n          console.log(\"Исполнитель назначен:\", data);\n          // Обновите состояние или выполните другие действия после назначения\n        } catch (error) {\n          console.error(\"Ошибка при назначении исполнителя:\", error);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["props","data","type","Array","required","user","created","userData","localStorage","getItem","JSON","parse","$router","push","methods","formatDate","date","options","year","month","day","Date","toLocaleDateString","undefined","assignManager","projectId","userId","prompt","response","fetch","method","headers","body","stringify","user_id","json","console","log","error","assignExecutor"],"sources":["D:\\programs\\osp\\domains\\Project-manager\\project-manager-front\\my-project\\src\\components\\ProjectsComponent.vue"],"sourcesContent":["<template>\n    <div class=\"projects\">\n\n      <ul>\n        <li v-for=\"project in data\" :key=\"project.id\" class=\"project-item\">\n          <router-link :to=\"{ name: 'project-tasks', params: { projectId: project.id }, query: { projectName: project.name } }\">\n          <h3>{{ project.name }}</h3>\n        </router-link>\n          <p>{{ project.description }}</p>\n          <p><strong>Status:</strong> {{ project.status }}</p>\n          <p><strong>Start Date:</strong> {{ formatDate(project.start_date) }}</p>\n          <p><strong>End Date:</strong> {{ formatDate(project.end_date) }}</p>\n\n          <div class=\"assignments\" v-if=\"user && user.role === 'Админ'\">\n            <button @click=\"assignManager(project.id)\">Assign Manager</button>\n            <button @click=\"assignExecutor(project.id)\">Assign Executor</button>\n          </div>\n        </li>\n      </ul>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    props: {\n      data: {\n        type: Array,\n        required: true,\n      },\n    },\n    data() {\n      return {\n        user: null,\n      };\n    },\n    created() {\n      const userData = localStorage.getItem('user');\n      if (userData) {\n        this.user = JSON.parse(userData);\n      } else {\n        this.$router.push('/login');\n      }\n    },\n    methods: {\n      formatDate(date) {\n        const options = { year: 'numeric', month: 'long', day: 'numeric' };\n        return new Date(date).toLocaleDateString(undefined, options);\n      },\n      async assignManager(projectId) {\n      const userId = prompt(\"Введите ID пользователя для назначения руководителем проекта:\");\n      if (userId) {\n        try {\n          const response = await fetch(`http://127.0.0.1:8000/api/admin/projects/${projectId}/assign-manager`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ user_id: userId }),\n          });\n          const data = await response.json();\n          console.log(\"Менеджер назначен:\", data);\n        } catch (error) {\n          console.error(\"Ошибка при назначении менеджера:\", error);\n        }\n      }\n    },\n    async assignExecutor(projectId) {\n      const userId = prompt(\"Введите ID пользователя для назначения исполнителем:\");\n      if (userId) {\n        try {\n          const response = await fetch(`http://127.0.0.1:8000/api/admin/projects/${projectId}/assign-executor`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ user_id: userId }),\n          });\n          const data = await response.json();\n          console.log(\"Исполнитель назначен:\", data);\n          // Обновите состояние или выполните другие действия после назначения\n        } catch (error) {\n          console.error(\"Ошибка при назначении исполнителя:\", error);\n        }\n      }\n    },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .projects {\n    padding: 20px;\n    background-color: #f9f9f9;\n    border-radius: 8px;\n  }\n  \n  .project-item {\n    margin-bottom: 20px;\n    padding: 15px;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n    background-color: #fff;\n  }\n  \n  .tasks {\n    margin-top: 10px;\n  }\n  \n  .tasks ul {\n    list-style-type: disc;\n    padding-left: 20px;\n  }\n  </style>\n  "],"mappings":";AAuBE,eAAe;EACbA,KAAK,EAAE;IACLC,IAAI,EAAE;MACJC,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDH,IAAIA,CAAA,EAAG;IACL,OAAO;MACLI,IAAI,EAAE;IACR,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,MAAMC,QAAO,GAAIC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC7C,IAAIF,QAAQ,EAAE;MACZ,IAAI,CAACF,IAAG,GAAIK,IAAI,CAACC,KAAK,CAACJ,QAAQ,CAAC;IAClC,OAAO;MACL,IAAI,CAACK,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;IAC7B;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAACC,IAAI,EAAE;MACf,MAAMC,OAAM,GAAI;QAAEC,IAAI,EAAE,SAAS;QAAEC,KAAK,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAU,CAAC;MAClE,OAAO,IAAIC,IAAI,CAACL,IAAI,CAAC,CAACM,kBAAkB,CAACC,SAAS,EAAEN,OAAO,CAAC;IAC9D,CAAC;IACD,MAAMO,aAAaA,CAACC,SAAS,EAAE;MAC/B,MAAMC,MAAK,GAAIC,MAAM,CAAC,+DAA+D,CAAC;MACtF,IAAID,MAAM,EAAE;QACV,IAAI;UACF,MAAME,QAAO,GAAI,MAAMC,KAAK,CAAC,4CAA4CJ,SAAS,iBAAiB,EAAE;YACnGK,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACP,cAAc,EAAE;YAClB,CAAC;YACDC,IAAI,EAAEtB,IAAI,CAACuB,SAAS,CAAC;cAAEC,OAAO,EAAER;YAAO,CAAC;UAC1C,CAAC,CAAC;UACF,MAAMzB,IAAG,GAAI,MAAM2B,QAAQ,CAACO,IAAI,CAAC,CAAC;UAClCC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEpC,IAAI,CAAC;QACzC,EAAE,OAAOqC,KAAK,EAAE;UACdF,OAAO,CAACE,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;QAC1D;MACF;IACF,CAAC;IACD,MAAMC,cAAcA,CAACd,SAAS,EAAE;MAC9B,MAAMC,MAAK,GAAIC,MAAM,CAAC,sDAAsD,CAAC;MAC7E,IAAID,MAAM,EAAE;QACV,IAAI;UACF,MAAME,QAAO,GAAI,MAAMC,KAAK,CAAC,4CAA4CJ,SAAS,kBAAkB,EAAE;YACpGK,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACP,cAAc,EAAE;YAClB,CAAC;YACDC,IAAI,EAAEtB,IAAI,CAACuB,SAAS,CAAC;cAAEC,OAAO,EAAER;YAAO,CAAC;UAC1C,CAAC,CAAC;UACF,MAAMzB,IAAG,GAAI,MAAM2B,QAAQ,CAACO,IAAI,CAAC,CAAC;UAClCC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEpC,IAAI,CAAC;UAC1C;QACF,EAAE,OAAOqC,KAAK,EAAE;UACdF,OAAO,CAACE,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;QAC5D;MACF;IACF;EACA;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}