{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = [\"onUpdate:modelValue\", \"onChange\"];\nconst _hoisted_2 = [\"value\"];\nconst _hoisted_3 = [\"onUpdate:modelValue\", \"onChange\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h3\", null, \"Tasks for Project: \" + _toDisplayString($props.projectName), 1 /* TEXT */), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tasks, task => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: task.id\n    }, [_createElementVNode(\"h4\", null, _toDisplayString(task.title), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(task.description), 1 /* TEXT */), _createElementVNode(\"p\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"strong\", null, \"Status:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(task.status), 1 /* TEXT */)]), _withDirectives(_createElementVNode(\"select\", {\n      \"onUpdate:modelValue\": $event => task.user_id = $event,\n      onChange: $event => $options.assignUser(task.id, task.user_id)\n    }, [_cache[1] || (_cache[1] = _createElementVNode(\"option\", {\n      value: \"\"\n    }, null, -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.users, user => {\n      return _openBlock(), _createElementBlock(\"option\", {\n        key: user.id,\n        value: user.id\n      }, _toDisplayString(user.name), 9 /* TEXT, PROPS */, _hoisted_2);\n    }), 128 /* KEYED_FRAGMENT */))], 40 /* PROPS, NEED_HYDRATION */, _hoisted_1), [[_vModelSelect, task.user_id]]), _withDirectives(_createElementVNode(\"select\", {\n      \"onUpdate:modelValue\": $event => task.status = $event,\n      onChange: $event => $options.updateStatus(task.id, task.status)\n    }, [...(_cache[2] || (_cache[2] = [_createElementVNode(\"option\", {\n      value: \"Назначена\"\n    }, \"Назначена\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n      value: \"Выполняется\"\n    }, \"Выполняется\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n      value: \"Завершена\"\n    }, \"Завершена\", -1 /* HOISTED */)]))], 40 /* PROPS, NEED_HYDRATION */, _hoisted_3), [[_vModelSelect, task.status]])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_toDisplayString","$props","projectName","_Fragment","_renderList","$data","tasks","task","key","id","title","description","_createTextVNode","status","$event","user_id","onChange","$options","assignUser","value","users","user","name","_hoisted_2","_hoisted_1","updateStatus","_hoisted_3"],"sources":["D:\\programs\\osp\\domains\\Project-manager\\project-manager-front\\my-project\\src\\components\\ProjectTasks.vue"],"sourcesContent":["<template>\n  <div>\n    <h3>Tasks for Project: {{ projectName }}</h3>\n    <ul>\n      <li v-for=\"task in tasks\" :key=\"task.id\">\n        <h4>{{ task.title }}</h4>\n        <p>{{ task.description }}</p>\n        <p><strong>Status:</strong> {{ task.status }}</p>\n\n        <select v-model=\"task.user_id\" @change=\"assignUser(task.id, task.user_id)\">\n          <option value=\"\"></option>\n          <option v-for=\"user in users\" :key=\"user.id\" :value=\"user.id\">{{ user.name }}</option>\n        </select>\n\n\n        <select v-model=\"task.status\" @change=\"updateStatus(task.id, task.status)\">\n          <option value=\"Назначена\">Назначена</option>\n          <option value=\"Выполняется\">Выполняется</option>\n          <option value=\"Завершена\">Завершена</option>\n        </select>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    projectId: {\n      type: String,\n      required: true,\n    },\n    projectName: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      tasks: [],\n      users: [],\n    };\n  },\n  created() {\n    this.fetchTasks();\n    this.fetchNonAdminUsers();\n  },\n  methods: {\n    async fetchNonAdminUsers() {\n        try {\n          const response = await fetch('http://0.0.0.0:8000/api/manager/users/non-admin');\n          if (!response.ok) {\n            throw new Error('Failed to fetch users');\n          }\n          const data = await response.json();\n          this.users = data; // Сохраняем пользователей в состоянии компонента\n        } catch (error) {\n          console.error('Error fetching non-admin users:', error);\n        }\n      },\n    async assignUser(taskId, userId) {\n      if (userId) {\n        try {\n          const response = await fetch(`http://0.0.0.0:8000/api/manager/tasks/${taskId}/assign`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ user_id: userId }),\n            credentials: 'include',\n          });\n\n          if (!response.ok) {\n            throw new Error('Failed to assign user');\n          }\n\n          const updatedTask = await response.json();\n          console.log('User assigned:', updatedTask);\n          // Обновите задачу в локальном состоянии, если необходимо\n          this.fetchTasks();\n        } catch (error) {\n          console.error('Error assigning user:', error);\n        }\n      }\n    },\n    async updateStatus(taskId, status) {\n      try {\n        const response = await fetch(`http://0.0.0.0:8000/api/manager/tasks/${taskId}/status`, {\n          method: 'PATCH',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ status }),\n          credentials: 'include',\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to update status');\n        }\n\n        const updatedTask = await response.json();\n        console.log('Status updated:', updatedTask);\n        // Обновите задачу в локальном состоянии, если необходимо\n        this.fetchTasks();\n      } catch (error) {\n        console.error('Error updating status:', error);\n      }\n    },\n    async fetchTasks() {\n      try {\n        const response = await fetch(`http://0.0.0.0:8000/api/manager/projects/${this.projectId}/tasks`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          credentials: 'include',\n        });\n        \n        if (!response.ok) {\n          throw new Error('Failed to fetch tasks');\n        }\n\n        const data = await response.json();\n        this.tasks = data.data; // Обратите внимание на это изменение\n      } catch (error) {\n        console.error(\"Ошибка при получении задач:\", error);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Да и так красиво, зачем стили, минимализм все дела */\n</style>"],"mappings":";mBAAA;mBAAA;mBAAA;;uBACEA,mBAAA,CAqBM,cApBJC,mBAAA,CAA6C,YAAzC,qBAAmB,GAAAC,gBAAA,CAAGC,MAAA,CAAAC,WAAW,kBACrCH,mBAAA,CAkBK,c,kBAjBHD,mBAAA,CAgBKK,SAAA,QApBXC,WAAA,CAIyBC,KAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAfT,mBAAA,CAgBK;MAhBsBU,GAAG,EAAED,IAAI,CAACE;QACnCV,mBAAA,CAAyB,YAAAC,gBAAA,CAAlBO,IAAI,CAACG,KAAK,kBACjBX,mBAAA,CAA6B,WAAAC,gBAAA,CAAvBO,IAAI,CAACI,WAAW,kBACtBZ,mBAAA,CAAiD,Y,0BAA9CA,mBAAA,CAAwB,gBAAhB,SAAO,sBAP1Ba,gBAAA,CAOmC,GAAC,GAAAZ,gBAAA,CAAGO,IAAI,CAACM,MAAM,iB,mBAE1Cd,mBAAA,CAGS;MAZjB,uBAAAe,MAAA,IASyBP,IAAI,CAACQ,OAAO,GAAAD,MAAA;MAAGE,QAAM,EAAAF,MAAA,IAAEG,QAAA,CAAAC,UAAU,CAACX,IAAI,CAACE,EAAE,EAAEF,IAAI,CAACQ,OAAO;kCACtEhB,mBAAA,CAA0B;MAAlBoB,KAAK,EAAC;IAAE,8B,kBAChBrB,mBAAA,CAAsFK,SAAA,QAXhGC,WAAA,CAWiCC,KAAA,CAAAe,KAAK,EAAbC,IAAI;2BAAnBvB,mBAAA,CAAsF;QAAvDU,GAAG,EAAEa,IAAI,CAACZ,EAAE;QAAGU,KAAK,EAAEE,IAAI,CAACZ;0BAAOY,IAAI,CAACC,IAAI,wBAXpFC,UAAA;qEAAAC,UAAA,I,gBASyBjB,IAAI,CAACQ,OAAO,E,mBAM7BhB,mBAAA,CAIS;MAnBjB,uBAAAe,MAAA,IAeyBP,IAAI,CAACM,MAAM,GAAAC,MAAA;MAAGE,QAAM,EAAAF,MAAA,IAAEG,QAAA,CAAAQ,YAAY,CAAClB,IAAI,CAACE,EAAE,EAAEF,IAAI,CAACM,MAAM;uCACtEd,mBAAA,CAA4C;MAApCoB,KAAK,EAAC;IAAW,GAAC,WAAS,qBACnCpB,mBAAA,CAAgD;MAAxCoB,KAAK,EAAC;IAAa,GAAC,aAAW,qBACvCpB,mBAAA,CAA4C;MAApCoB,KAAK,EAAC;IAAW,GAAC,WAAS,oB,qCAlB7CO,UAAA,I,gBAeyBnB,IAAI,CAACM,MAAM,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}