{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"main-page\"\n};\nconst _hoisted_2 = {\n  class: \"content\"\n};\nconst _hoisted_3 = {\n  class: \"role-actions\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"info-box\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ModalComponent = _resolveComponent(\"ModalComponent\");\n  return $data.user ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [$data.user.role === 'Руководитель проекта' ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[0] || (_cache[0] = $event => $options.selectSection('projects'))\n  }, \"Projects\")) : _createCommentVNode(\"v-if\", true), $data.user.role === 'Руководитель проекта' ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    onClick: _cache[1] || (_cache[1] = $event => $options.selectSection('tasks'))\n  }, \"Tasks\")) : _createCommentVNode(\"v-if\", true), $data.user.role === 'Руководитель проекта' ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 2,\n    onClick: _cache[2] || (_cache[2] = $event => $options.openModal('task'))\n  }, \"Create Task\")) : _createCommentVNode(\"v-if\", true), $data.user.role === 'Руководитель проекта' ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 3,\n    onClick: _cache[3] || (_cache[3] = $event => $options.openModal('project'))\n  }, \"Create Project\")) : _createCommentVNode(\"v-if\", true)]), $data.selectedSection ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"h2\", null, _toDisplayString($data.selectedSection.toUpperCase()), 1 /* TEXT */), (_openBlock(), _createBlock(_resolveDynamicComponent($options.currentComponent), {\n    data: $data.sectionData || [],\n    onProjectCreated: _cache[4] || (_cache[4] = $event => $options.fetchSectionData('projects'))\n  }, null, 40 /* PROPS, NEED_HYDRATION */, [\"data\"]))])) : _createCommentVNode(\"v-if\", true)]), _createVNode(_component_ModalComponent, {\n    isOpen: $data.isModalOpen,\n    onClose: $options.closeModal\n  }, {\n    header: _withCtx(() => [_createElementVNode(\"h3\", null, _toDisplayString($data.modalTitle), 1 /* TEXT */)]),\n    body: _withCtx(() => [(_openBlock(), _createBlock(_resolveDynamicComponent($data.modalComponent), {\n      user: $data.user,\n      onCreateTask: $options.createTask,\n      onCreateProject: $options.createProject\n    }, null, 40 /* PROPS, NEED_HYDRATION */, [\"user\", \"onCreateTask\", \"onCreateProject\"]))]),\n    footer: _withCtx(() => [_createElementVNode(\"button\", {\n      onClick: _cache[5] || (_cache[5] = (...args) => $options.closeModal && $options.closeModal(...args))\n    }, \"Close\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"isOpen\", \"onClose\"])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["key","class","$data","user","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","role","onClick","_cache","$event","$options","selectSection","_createCommentVNode","openModal","selectedSection","_hoisted_4","_toDisplayString","toUpperCase","_createBlock","_resolveDynamicComponent","currentComponent","data","sectionData","onProjectCreated","fetchSectionData","_createVNode","_component_ModalComponent","isOpen","isModalOpen","onClose","closeModal","header","_withCtx","modalTitle","body","modalComponent","onCreateTask","createTask","onCreateProject","createProject","footer","args","_"],"sources":["D:\\programs\\osp\\domains\\Project-manager\\project-manager-front\\my-project\\src\\components\\MainPageManager.vue"],"sourcesContent":["<template>\n    <div class=\"main-page\" v-if=\"user\">\n      <div class=\"content\">\n        <div class=\"role-actions\">\n          <button v-if=\"user.role === 'Руководитель проекта'\" @click=\"selectSection('projects')\">Projects</button>\n          <button v-if=\"user.role === 'Руководитель проекта'\" @click=\"selectSection('tasks')\">Tasks</button>\n          <button v-if=\"user.role === 'Руководитель проекта'\" @click=\"openModal('task')\">Create Task</button>\n          <button v-if=\"user.role === 'Руководитель проекта'\" @click=\"openModal('project')\">Create Project</button>\n        </div>\n        <div class=\"info-box\" v-if=\"selectedSection\">\n          <h2>{{ selectedSection.toUpperCase() }}</h2>\n          <component :is=\"currentComponent\" :data=\"sectionData || []\" @projectCreated=\"fetchSectionData('projects')\"></component>\n        </div>\n      </div>\n\n      <ModalComponent :isOpen=\"isModalOpen\" @close=\"closeModal\">\n      <template #header>\n        <h3>{{ modalTitle }}</h3>\n      </template>\n      <template #body>\n        <component :is=\"modalComponent\" :user=\"user\" @create-task=\"createTask\" @create-project=\"createProject\" />\n      </template>\n      <template #footer>\n        <button @click=\"closeModal\">Close</button>\n      </template>\n      </ModalComponent>\n\n    </div>\n</template>\n  \n  <script>\n  import ProjectsComponent from './ProjectsComponent.vue';\n  import TasksComponent from './TasksComponent.vue';\n  import CreateTaskForm from './CreateTaskForm.vue';\n  import ModalComponent from './ModalComponent.vue';\n  import CreateProjectForm from './CreateProjectForm.vue';\n  \n  export default {\n    data() {\n      return {\n        user: null,\n        selectedSection: null,\n        sectionData: [],\n        isModalOpen: false,\n        modalComponent: null,\n        modalTitle: '',\n      };\n    },\n    computed: {\n      currentComponent() {\n        switch (this.selectedSection) {\n          case 'projects':\n            return ProjectsComponent;\n          case 'tasks':\n            return TasksComponent;\n          default:\n            return null;\n        }\n      },\n    },\n    created() {\n      const userData = localStorage.getItem('user');\n      if (userData) {\n        this.user = JSON.parse(userData);\n        this.selectSection('projects');\n      } else {\n        this.$router.push('/login');\n      }\n    },\n    methods: {\n      openModal(type) {\n        this.isModalOpen = true;\n        if (type === 'task') {\n          this.modalComponent = CreateTaskForm;\n          this.modalTitle = 'Create Task';\n        } else if (type === 'project') {\n          this.modalComponent = CreateProjectForm;\n          this.modalTitle = 'Create Project';\n        }\n      },\n      closeModal() {\n        this.isModalOpen = false;\n      },\n      createTask(taskData) {\n        fetch('http://127.0.0.1:8000/api/manager/tasks/create', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(taskData),\n          credentials: 'include',\n        })\n        .then(response => {\n          if (!response.ok) {\n            throw new Error('Failed to create task');\n          }\n          return response.json();\n        })\n        .then(() => {\n          this.fetchSectionData('tasks');\n          this.closeModal();\n        })\n        .catch(error => console.error('Error creating task:', error));\n      },\n      createProject(projectData) {\n        fetch('http://127.0.0.1:8000/api/manager/projects/create', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(projectData),\n          credentials: 'include',\n        })\n        .then(response => {\n          if (!response.ok) {\n            throw new Error('Failed to create project');\n          }\n          return response.json();\n        })\n        .then(() => {\n          this.fetchSectionData('projects');\n          this.closeModal();\n        })\n        .catch(error => console.error('Error creating project:', error));\n      },\n      selectSection(section) {\n        this.selectedSection = section;\n        this.fetchSectionData(section);\n      },\n      fetchSectionData(section) {\n        let url = '';\n        const userId = this.user.id; // Получаем user_id из локального хранилища\n        switch (section) {\n          case 'projects':\n            url = `http://127.0.0.1:8000/api/manager/projects`; // URL для получения проектов\n            break;\n          case 'tasks':\n            url = `http://127.0.0.1:8000/api/user/tasks`; // URL для получения задач\n            break;\n        }\n        fetch(url, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ user_id: userId }),\n          credentials: 'include',\n        })\n        .then(response => response.json())\n        .then(data => {\n          this.sectionData = data;\n        })\n        .catch(error => console.error('Error fetching data:', error));\n      },\n    },\n    components: {\n      ProjectsComponent,\n      TasksComponent,\n      CreateTaskForm,\n      ModalComponent,\n      CreateProjectForm\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .header {\n    display: flex;\n    justify-content: space-between;\n    padding: 10px;\n    background-color: #f8f9fa;\n  }\n  .content {\n    padding: 20px;\n  }\n  .role-actions {\n    width: 100%;\n    height: 40px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 2px solid black;\n  }\n  .info-box {\n    border: 1px solid #ccc;\n    padding: 10px;\n    border-radius: 5px;\n  }\n  </style>\n  "],"mappings":";;EAAAA,GAAA;EACSC,KAAK,EAAC;;;EACJA,KAAK,EAAC;AAAS;;EACbA,KAAK,EAAC;AAAc;;EAHjCD,GAAA;EASaC,KAAK,EAAC;;;;SARcC,KAAA,CAAAC,IAAI,I,cAAjCC,mBAAA,CA0BM,OA1BNC,UA0BM,GAzBJC,mBAAA,CAWM,OAXNC,UAWM,GAVJD,mBAAA,CAKM,OALNE,UAKM,GAJUN,KAAA,CAAAC,IAAI,CAACM,IAAI,+B,cAAvBL,mBAAA,CAAwG;IAJlHJ,GAAA;IAI+DU,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,aAAa;KAAc,UAAQ,KAJzGC,mBAAA,gBAKwBb,KAAA,CAAAC,IAAI,CAACM,IAAI,+B,cAAvBL,mBAAA,CAAkG;IAL5GJ,GAAA;IAK+DU,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,aAAa;KAAW,OAAK,KALnGC,mBAAA,gBAMwBb,KAAA,CAAAC,IAAI,CAACM,IAAI,+B,cAAvBL,mBAAA,CAAmG;IAN7GJ,GAAA;IAM+DU,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAG,SAAS;KAAU,aAAW,KANpGD,mBAAA,gBAOwBb,KAAA,CAAAC,IAAI,CAACM,IAAI,+B,cAAvBL,mBAAA,CAAyG;IAPnHJ,GAAA;IAO+DU,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAG,SAAS;KAAa,gBAAc,KAP1GD,mBAAA,e,GASoCb,KAAA,CAAAe,eAAe,I,cAA3Cb,mBAAA,CAGM,OAHNc,UAGM,GAFJZ,mBAAA,CAA4C,YAAAa,gBAAA,CAArCjB,KAAA,CAAAe,eAAe,CAACG,WAAW,qB,cAClCC,YAAA,CAAuHC,wBAXjI,CAW0BT,QAAA,CAAAU,gBAAgB;IAAGC,IAAI,EAAEtB,KAAA,CAAAuB,WAAW;IAASC,gBAAc,EAAAf,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAc,gBAAgB;2DAXvGZ,mBAAA,e,GAeMa,YAAA,CAUiBC,yBAAA;IAVAC,MAAM,EAAE5B,KAAA,CAAA6B,WAAW;IAAGC,OAAK,EAAEnB,QAAA,CAAAoB;;IACnCC,MAAM,EAAAC,QAAA,CACf,MAAyB,CAAzB7B,mBAAA,CAAyB,YAAAa,gBAAA,CAAlBjB,KAAA,CAAAkC,UAAU,iB;IAERC,IAAI,EAAAF,QAAA,CACb,MAAyG,E,cAAzGd,YAAA,CAAyGC,wBApBjH,CAoBwBpB,KAAA,CAAAoC,cAAc;MAAGnC,IAAI,EAAED,KAAA,CAAAC,IAAI;MAAGoC,YAAW,EAAE1B,QAAA,CAAA2B,UAAU;MAAGC,eAAc,EAAE5B,QAAA,CAAA6B;;IAE/EC,MAAM,EAAAR,QAAA,CACf,MAA0C,CAA1C7B,mBAAA,CAA0C;MAAjCI,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAiC,IAAA,KAAE/B,QAAA,CAAAoB,UAAA,IAAApB,QAAA,CAAAoB,UAAA,IAAAW,IAAA,CAAU;OAAE,OAAK,E;IAvBzCC,CAAA;gDAAA9B,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}