{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"projects\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"assignments\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.data, project => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: project.id,\n      class: \"project-item\"\n    }, [_createVNode(_component_router_link, {\n      to: {\n        name: 'project-tasks',\n        params: {\n          projectId: project.id\n        },\n        query: {\n          projectName: project.name\n        }\n      }\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"h3\", null, _toDisplayString(project.name), 1 /* TEXT */)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"]), _createElementVNode(\"p\", null, _toDisplayString(project.description), 1 /* TEXT */), _createElementVNode(\"p\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"strong\", null, \"Status:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(project.status), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"strong\", null, \"Start Date:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($options.formatDate(project.start_date)), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"strong\", null, \"End Date:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($options.formatDate(project.end_date)), 1 /* TEXT */)]), $data.user && $data.user.role === 'Админ' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n      onClick: $event => $options.assignManager(project.id)\n    }, \"Assign Manager\", 8 /* PROPS */, _hoisted_3), _createElementVNode(\"button\", {\n      onClick: $event => $options.assignExecutor(project.id)\n    }, \"Assign Executor\", 8 /* PROPS */, _hoisted_4)])) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_Fragment","_renderList","$props","data","project","id","_createVNode","_component_router_link","to","name","params","projectId","query","projectName","default","_withCtx","_toDisplayString","_","description","_createTextVNode","status","$options","formatDate","start_date","end_date","$data","user","role","_hoisted_2","onClick","$event","assignManager","_hoisted_3","assignExecutor","_hoisted_4","_createCommentVNode"],"sources":["D:\\programs\\osp\\domains\\Project-manager\\project-manager-front\\my-project\\src\\components\\ProjectsComponent.vue"],"sourcesContent":["<template>\n    <div class=\"projects\">\n\n      <ul>\n        <li v-for=\"project in data\" :key=\"project.id\" class=\"project-item\">\n          <router-link :to=\"{ name: 'project-tasks', params: { projectId: project.id }, query: { projectName: project.name } }\">\n          <h3>{{ project.name }}</h3>\n        </router-link>\n          <p>{{ project.description }}</p>\n          <p><strong>Status:</strong> {{ project.status }}</p>\n          <p><strong>Start Date:</strong> {{ formatDate(project.start_date) }}</p>\n          <p><strong>End Date:</strong> {{ formatDate(project.end_date) }}</p>\n\n          <div class=\"assignments\" v-if=\"user && user.role === 'Админ'\">\n            <button @click=\"assignManager(project.id)\">Assign Manager</button>\n            <button @click=\"assignExecutor(project.id)\">Assign Executor</button>\n          </div>\n        </li>\n      </ul>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    props: {\n      data: {\n        type: Array,\n        required: true,\n      },\n    },\n    data() {\n      return {\n        user: null,\n      };\n    },\n    created() {\n      const userData = localStorage.getItem('user');\n      if (userData) {\n        this.user = JSON.parse(userData);\n      } else {\n        this.$router.push('/login');\n      }\n    },\n    methods: {\n      formatDate(date) {\n        const options = { year: 'numeric', month: 'long', day: 'numeric' };\n        return new Date(date).toLocaleDateString(undefined, options);\n      },\n      async assignManager(projectId) {\n      const userId = prompt(\"Введите ID пользователя для назначения руководителем проекта:\");\n      if (userId) {\n        try {\n          const response = await fetch(`http://0.0.0.0:8000/api/admin/projects/${projectId}/assign-manager`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ user_id: userId }),\n          });\n          const data = await response.json();\n          console.log(\"Менеджер назначен:\", data);\n        } catch (error) {\n          console.error(\"Ошибка при назначении менеджера:\", error);\n        }\n      }\n    },\n    async assignExecutor(projectId) {\n      const userId = prompt(\"Введите ID пользователя для назначения исполнителем:\");\n      if (userId) {\n        try {\n          const response = await fetch(`http://0.0.0.0:8000/api/admin/projects/${projectId}/assign-executor`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ user_id: userId }),\n          });\n          const data = await response.json();\n          console.log(\"Исполнитель назначен:\", data);\n          // Обновите состояние или выполните другие действия после назначения\n        } catch (error) {\n          console.error(\"Ошибка при назначении исполнителя:\", error);\n        }\n      }\n    },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .projects {\n    padding: 20px;\n    background-color: #f9f9f9;\n    border-radius: 8px;\n  }\n  \n  .project-item {\n    margin-bottom: 20px;\n    padding: 15px;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n    background-color: #fff;\n  }\n  \n  .tasks {\n    margin-top: 10px;\n  }\n  \n  .tasks ul {\n    list-style-type: disc;\n    padding-left: 20px;\n  }\n  </style>\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAU;;EADzBC,GAAA;EAaeD,KAAK,EAAC;;mBAbrB;mBAAA;;;uBACIE,mBAAA,CAkBM,OAlBNC,UAkBM,GAhBJC,mBAAA,CAeK,c,kBAdHF,mBAAA,CAaKG,SAAA,QAjBbC,WAAA,CAI8BC,MAAA,CAAAC,IAAI,EAAfC,OAAO;yBAAlBP,mBAAA,CAaK;MAbwBD,GAAG,EAAEQ,OAAO,CAACC,EAAE;MAAEV,KAAK,EAAC;QAClDW,YAAA,CAEYC,sBAAA;MAFEC,EAAE;QAAAC,IAAA;QAAAC,MAAA;UAAAC,SAAA,EAAgDP,OAAO,CAACC;QAAE;QAAAO,KAAA;UAAAC,WAAA,EAA0BT,OAAO,CAACK;QAAI;MAAA;;MAL1HK,OAAA,EAAAC,QAAA,CAMU,MAA2B,CAA3BhB,mBAAA,CAA2B,YAAAiB,gBAAA,CAApBZ,OAAO,CAACK,IAAI,iB;MAN7BQ,CAAA;iDAQUlB,mBAAA,CAAgC,WAAAiB,gBAAA,CAA1BZ,OAAO,CAACc,WAAW,kBACzBnB,mBAAA,CAAoD,Y,0BAAjDA,mBAAA,CAAwB,gBAAhB,SAAO,sBAT5BoB,gBAAA,CASqC,GAAC,GAAAH,gBAAA,CAAGZ,OAAO,CAACgB,MAAM,iB,GAC7CrB,mBAAA,CAAwE,Y,0BAArEA,mBAAA,CAA4B,gBAApB,aAAW,sBAVhCoB,gBAAA,CAUyC,GAAC,GAAAH,gBAAA,CAAGK,QAAA,CAAAC,UAAU,CAAClB,OAAO,CAACmB,UAAU,kB,GAChExB,mBAAA,CAAoE,Y,0BAAjEA,mBAAA,CAA0B,gBAAlB,WAAS,sBAX9BoB,gBAAA,CAWuC,GAAC,GAAAH,gBAAA,CAAGK,QAAA,CAAAC,UAAU,CAAClB,OAAO,CAACoB,QAAQ,kB,GAE7BC,KAAA,CAAAC,IAAI,IAAID,KAAA,CAAAC,IAAI,CAACC,IAAI,gB,cAAhD9B,mBAAA,CAGM,OAHN+B,UAGM,GAFJ7B,mBAAA,CAAkE;MAAzD8B,OAAK,EAAAC,MAAA,IAAET,QAAA,CAAAU,aAAa,CAAC3B,OAAO,CAACC,EAAE;OAAG,gBAAc,iBAdrE2B,UAAA,GAeYjC,mBAAA,CAAoE;MAA3D8B,OAAK,EAAAC,MAAA,IAAET,QAAA,CAAAY,cAAc,CAAC7B,OAAO,CAACC,EAAE;OAAG,iBAAe,iBAfvE6B,UAAA,E,KAAAC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}