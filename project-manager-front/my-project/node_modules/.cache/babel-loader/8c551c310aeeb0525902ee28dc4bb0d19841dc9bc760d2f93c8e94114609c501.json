{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ProjectsComponent from './ProjectsComponent.vue';\nimport TasksComponent from './TasksComponent.vue';\nimport UsersComponent from './UsersComponent.vue';\nexport default {\n  props: {\n    user: Object\n  },\n  data() {\n    return {\n      selectedSection: null,\n      sectionData: []\n    };\n  },\n  computed: {\n    currentComponent() {\n      switch (this.selectedSection) {\n        case 'projects':\n          return ProjectsComponent;\n        case 'tasks':\n          return TasksComponent;\n        case 'users':\n          return UsersComponent;\n        default:\n          return null;\n      }\n    }\n  },\n  methods: {\n    handleUserCreated(newUser) {\n      this.sectionData.push(newUser);\n    },\n    selectSection(section) {\n      this.selectedSection = section;\n      this.fetchSectionData(section);\n    },\n    fetchSectionData(section) {\n      let url = '';\n      switch (section) {\n        case 'projects':\n          url = 'http://0.0.0.0:8000/api/admin/projects/';\n          break;\n        case 'tasks':\n          url = 'http://0.0.0.0:8000/api/manager/tasks';\n          break;\n        case 'users':\n          url = 'http://0.0.0.0:8000/api/admin/users';\n          break;\n      }\n      fetch(url, {\n        method: 'GET',\n        credentials: 'include'\n      }).then(response => response.json()).then(data => {\n        this.sectionData = data;\n      }).catch(error => console.error('Error fetching data:', error));\n    },\n    handleUserDeleted(userId) {\n      // Удаляем пользователя из sectionData\n      this.sectionData = this.sectionData.filter(user => user.id !== userId);\n    },\n    handleUserUpdated(updatedUser) {\n      const index = this.sectionData.findIndex(user => user.id === updatedUser.id);\n      if (index !== -1) {\n        // Заменяем объект пользователя в массиве\n        this.sectionData.splice(index, 1, updatedUser);\n        // Присваиваем новый массив для реактивного обновления\n        this.sectionData = [...this.sectionData];\n      }\n    }\n  },\n  components: {\n    ProjectsComponent,\n    TasksComponent,\n    UsersComponent\n  }\n};","map":{"version":3,"names":["ProjectsComponent","TasksComponent","UsersComponent","props","user","Object","data","selectedSection","sectionData","computed","currentComponent","methods","handleUserCreated","newUser","push","selectSection","section","fetchSectionData","url","fetch","method","credentials","then","response","json","catch","error","console","handleUserDeleted","userId","filter","id","handleUserUpdated","updatedUser","index","findIndex","splice","components"],"sources":["D:\\programs\\osp\\domains\\Project-manager\\project-manager-front\\my-project\\src\\components\\MainPageAdmin.vue"],"sourcesContent":["<template>\n  <div class=\"main-page\" v-if=\"user\">\n    <div class=\"content\">\n      <div class=\"role-actions\">\n        <button v-if=\"user.role === 'Админ'\" @click=\"selectSection('projects')\">Projects</button>\n        <button v-if=\"user.role === 'Админ'\" @click=\"selectSection('tasks')\">Tasks</button>\n        <button v-if=\"user.role === 'Админ'\" @click=\"selectSection('users')\">Users</button>\n      </div>\n      <div class=\"info-box\" v-if=\"selectedSection\">\n        <h2>{{ selectedSection.toUpperCase() }}</h2>\n        <component :is=\"currentComponent\" :data=\"sectionData || []\"\n        @userDeleted=\"handleUserDeleted\"\n        @userUpdated=\"handleUserUpdated\"\n        @userCreated=\"handleUserCreated\"\n        ></component>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ProjectsComponent from './ProjectsComponent.vue';\nimport TasksComponent from './TasksComponent.vue';\nimport UsersComponent from './UsersComponent.vue';\n\nexport default {\n  props: {\n    user: Object,\n  },\n  data() {\n    return {\n      selectedSection: null,\n      sectionData: [],\n    };\n  },\n  computed: {\n    currentComponent() {\n      switch (this.selectedSection) {\n        case 'projects':\n          return ProjectsComponent;\n        case 'tasks':\n          return TasksComponent;\n        case 'users':\n          return UsersComponent;\n        default:\n          return null;\n      }\n    },\n  },\n  methods: {\n    handleUserCreated(newUser) {\n      this.sectionData.push(newUser);\n    },\n    selectSection(section) {\n      this.selectedSection = section;\n      this.fetchSectionData(section);\n    },\n    fetchSectionData(section) {\n      let url = '';\n      switch (section) {\n        case 'projects':\n          url = 'http://0.0.0.0:8000/api/admin/projects/';\n          break;\n        case 'tasks':\n          url = 'http://0.0.0.0:8000/api/manager/tasks';\n          break;\n        case 'users':\n          url = 'http://0.0.0.0:8000/api/admin/users';\n          break;\n      }\n      fetch(url, {\n        method: 'GET',\n        credentials: 'include',\n      })\n      .then(response => response.json())\n      .then(data => {\n        this.sectionData = data;\n      })\n      .catch(error => console.error('Error fetching data:', error));\n    },\n    handleUserDeleted(userId) {\n      // Удаляем пользователя из sectionData\n      this.sectionData = this.sectionData.filter(user => user.id !== userId);\n    },\n    handleUserUpdated(updatedUser) {\n      const index = this.sectionData.findIndex(user => user.id === updatedUser.id);\n      if (index !== -1) {\n        // Заменяем объект пользователя в массиве\n        this.sectionData.splice(index, 1, updatedUser);\n        // Присваиваем новый массив для реактивного обновления\n        this.sectionData = [...this.sectionData];\n      }\n    },\n  },\n  components: {\n    ProjectsComponent,\n    TasksComponent,\n    UsersComponent,\n  },\n};\n</script>\n\n<style scoped>\n.content {\n  padding: 20px;\n}\n.role-actions {\n  margin-bottom: 20px;\n}\n.info-box {\n  border: 1px solid #ccc;\n  padding: 10px;\n  border-radius: 5px;\n}\n</style>\n"],"mappings":";AAqBA,OAAOA,iBAAgB,MAAO,yBAAyB;AACvD,OAAOC,cAAa,MAAO,sBAAsB;AACjD,OAAOC,cAAa,MAAO,sBAAsB;AAEjD,eAAe;EACbC,KAAK,EAAE;IACLC,IAAI,EAAEC;EACR,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,eAAe,EAAE,IAAI;MACrBC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,gBAAgBA,CAAA,EAAG;MACjB,QAAQ,IAAI,CAACH,eAAe;QAC1B,KAAK,UAAU;UACb,OAAOP,iBAAiB;QAC1B,KAAK,OAAO;UACV,OAAOC,cAAc;QACvB,KAAK,OAAO;UACV,OAAOC,cAAc;QACvB;UACE,OAAO,IAAI;MACf;IACF;EACF,CAAC;EACDS,OAAO,EAAE;IACPC,iBAAiBA,CAACC,OAAO,EAAE;MACzB,IAAI,CAACL,WAAW,CAACM,IAAI,CAACD,OAAO,CAAC;IAChC,CAAC;IACDE,aAAaA,CAACC,OAAO,EAAE;MACrB,IAAI,CAACT,eAAc,GAAIS,OAAO;MAC9B,IAAI,CAACC,gBAAgB,CAACD,OAAO,CAAC;IAChC,CAAC;IACDC,gBAAgBA,CAACD,OAAO,EAAE;MACxB,IAAIE,GAAE,GAAI,EAAE;MACZ,QAAQF,OAAO;QACb,KAAK,UAAU;UACbE,GAAE,GAAI,yCAAyC;UAC/C;QACF,KAAK,OAAO;UACVA,GAAE,GAAI,uCAAuC;UAC7C;QACF,KAAK,OAAO;UACVA,GAAE,GAAI,qCAAqC;UAC3C;MACJ;MACAC,KAAK,CAACD,GAAG,EAAE;QACTE,MAAM,EAAE,KAAK;QACbC,WAAW,EAAE;MACf,CAAC,EACAC,IAAI,CAACC,QAAO,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAChCF,IAAI,CAAChB,IAAG,IAAK;QACZ,IAAI,CAACE,WAAU,GAAIF,IAAI;MACzB,CAAC,EACAmB,KAAK,CAACC,KAAI,IAAKC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;IAC/D,CAAC;IACDE,iBAAiBA,CAACC,MAAM,EAAE;MACxB;MACA,IAAI,CAACrB,WAAU,GAAI,IAAI,CAACA,WAAW,CAACsB,MAAM,CAAC1B,IAAG,IAAKA,IAAI,CAAC2B,EAAC,KAAMF,MAAM,CAAC;IACxE,CAAC;IACDG,iBAAiBA,CAACC,WAAW,EAAE;MAC7B,MAAMC,KAAI,GAAI,IAAI,CAAC1B,WAAW,CAAC2B,SAAS,CAAC/B,IAAG,IAAKA,IAAI,CAAC2B,EAAC,KAAME,WAAW,CAACF,EAAE,CAAC;MAC5E,IAAIG,KAAI,KAAM,CAAC,CAAC,EAAE;QAChB;QACA,IAAI,CAAC1B,WAAW,CAAC4B,MAAM,CAACF,KAAK,EAAE,CAAC,EAAED,WAAW,CAAC;QAC9C;QACA,IAAI,CAACzB,WAAU,GAAI,CAAC,GAAG,IAAI,CAACA,WAAW,CAAC;MAC1C;IACF;EACF,CAAC;EACD6B,UAAU,EAAE;IACVrC,iBAAiB;IACjBC,cAAc;IACdC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}