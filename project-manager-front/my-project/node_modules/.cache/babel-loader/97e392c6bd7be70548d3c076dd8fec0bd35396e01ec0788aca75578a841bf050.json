{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport TasksComponent from './TasksComponent.vue';\nexport default {\n  props: {\n    data: Object\n  },\n  data() {\n    return {\n      selectedSection: 'tasks',\n      // По умолчанию выбираем вкладку задач\n      sectionData: [] // Инициализируем как пустой массив\n    };\n  },\n  computed: {\n    currentComponent() {\n      switch (this.selectedSection) {\n        case 'tasks':\n          return TasksComponent;\n        default:\n          return null;\n      }\n    }\n  },\n  created() {\n    const userData = localStorage.getItem('user');\n    if (userData) {\n      this.user = JSON.parse(userData);\n      this.fetchSectionData(this.selectedSection); // Загружаем данные задач при создании\n    } else {\n      this.$router.push('/login');\n    }\n  },\n  methods: {\n    selectSection(section) {\n      this.selectedSection = section;\n      this.fetchSectionData(section);\n    },\n    fetchSectionData(section) {\n      let url = '';\n      switch (section) {\n        case 'tasks':\n          url = 'http://0.0.0.0:8000/api/tasks'; // URL для получения задач исполнителя\n          break;\n      }\n      fetch(url, {\n        method: 'GET',\n        credentials: 'include'\n      }).then(response => response.json()).then(data => {\n        this.sectionData = data.data; // Предполагаем, что данные находятся в data\n      }).catch(error => console.error('Error fetching data:', error));\n    }\n  },\n  components: {\n    TasksComponent\n  }\n};","map":{"version":3,"names":["TasksComponent","props","data","Object","selectedSection","sectionData","computed","currentComponent","created","userData","localStorage","getItem","user","JSON","parse","fetchSectionData","$router","push","methods","selectSection","section","url","fetch","method","credentials","then","response","json","catch","error","console","components"],"sources":["D:\\programs\\osp\\domains\\Project-manager\\project-manager-front\\my-project\\src\\components\\MainPageExecutor.vue"],"sourcesContent":["<template>\n    <div class=\"main-page\" v-if=\"user\">\n      <div class=\"content\">\n        <div class=\"role-actions\">\n          <button @click=\"selectSection('tasks')\">Tasks</button>\n        </div>\n        <div class=\"info-box\" v-if=\"selectedSection\">\n          <h2>{{ selectedSection.toUpperCase() }}</h2>\n          <component :is=\"currentComponent\" :data=\"sectionData || []\"></component>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import TasksComponent from './TasksComponent.vue';\n  \n  export default {\n    props: {\n      data: Object,\n    },\n    data() {\n      return {\n        selectedSection: 'tasks', // По умолчанию выбираем вкладку задач\n        sectionData: [], // Инициализируем как пустой массив\n      };\n    },\n    computed: {\n      currentComponent() {\n        switch (this.selectedSection) {\n          case 'tasks':\n            return TasksComponent;\n          default:\n            return null;\n        }\n      },\n    },\n    created() {\n      const userData = localStorage.getItem('user');\n      if (userData) {\n        this.user = JSON.parse(userData);\n        this.fetchSectionData(this.selectedSection); // Загружаем данные задач при создании\n      } else {\n        this.$router.push('/login');\n      }\n    },\n    methods: {\n      selectSection(section) {\n        this.selectedSection = section;\n        this.fetchSectionData(section);\n      },\n      fetchSectionData(section) {\n        let url = '';\n        switch (section) {\n          case 'tasks':\n            url = 'http://0.0.0.0:8000/api/tasks'; // URL для получения задач исполнителя\n            break;\n        }\n        fetch(url, {\n          method: 'GET',\n          credentials: 'include',\n        })\n        .then(response => response.json())\n        .then(data => {\n          this.sectionData = data.data; // Предполагаем, что данные находятся в data\n        })\n        .catch(error => console.error('Error fetching data:', error));\n      },\n    },\n    components: {\n      TasksComponent,\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .content {\n    padding: 20px;\n  }\n  .role-actions {\n    margin-bottom: 20px;\n  }\n  .info-box {\n    border: 1px solid #ccc;\n    padding: 10px;\n    border-radius: 5px;\n  }\n  </style>\n  "],"mappings":";AAeE,OAAOA,cAAa,MAAO,sBAAsB;AAEjD,eAAe;EACbC,KAAK,EAAE;IACLC,IAAI,EAAEC;EACR,CAAC;EACDD,IAAIA,CAAA,EAAG;IACL,OAAO;MACLE,eAAe,EAAE,OAAO;MAAE;MAC1BC,WAAW,EAAE,EAAE,CAAE;IACnB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,gBAAgBA,CAAA,EAAG;MACjB,QAAQ,IAAI,CAACH,eAAe;QAC1B,KAAK,OAAO;UACV,OAAOJ,cAAc;QACvB;UACE,OAAO,IAAI;MACf;IACF;EACF,CAAC;EACDQ,OAAOA,CAAA,EAAG;IACR,MAAMC,QAAO,GAAIC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC7C,IAAIF,QAAQ,EAAE;MACZ,IAAI,CAACG,IAAG,GAAIC,IAAI,CAACC,KAAK,CAACL,QAAQ,CAAC;MAChC,IAAI,CAACM,gBAAgB,CAAC,IAAI,CAACX,eAAe,CAAC,EAAE;IAC/C,OAAO;MACL,IAAI,CAACY,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;IAC7B;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,aAAaA,CAACC,OAAO,EAAE;MACrB,IAAI,CAAChB,eAAc,GAAIgB,OAAO;MAC9B,IAAI,CAACL,gBAAgB,CAACK,OAAO,CAAC;IAChC,CAAC;IACDL,gBAAgBA,CAACK,OAAO,EAAE;MACxB,IAAIC,GAAE,GAAI,EAAE;MACZ,QAAQD,OAAO;QACb,KAAK,OAAO;UACVC,GAAE,GAAI,+BAA+B,EAAE;UACvC;MACJ;MACAC,KAAK,CAACD,GAAG,EAAE;QACTE,MAAM,EAAE,KAAK;QACbC,WAAW,EAAE;MACf,CAAC,EACAC,IAAI,CAACC,QAAO,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAChCF,IAAI,CAACvB,IAAG,IAAK;QACZ,IAAI,CAACG,WAAU,GAAIH,IAAI,CAACA,IAAI,EAAE;MAChC,CAAC,EACA0B,KAAK,CAACC,KAAI,IAAKC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;IAC/D;EACF,CAAC;EACDE,UAAU,EAAE;IACV/B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}